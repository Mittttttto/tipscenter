/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-03-28 11:01:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class echo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head lang=\"en\">\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <script src=\"http://cdn.sockjs.org/sockjs-0.3.min.js\"></script>\r\n");
      out.write("    <!-- 新 Bootstrap 核心 CSS 文件 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css\">\r\n");
      out.write("    <!-- 可选的Bootstrap主题文件（一般不用引入） -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css\">\r\n");
      out.write("    <!-- jQuery文件。务必在bootstrap.min.js 之前引入 -->\r\n");
      out.write("    <script src=\"//cdn.bootcss.com/jquery/1.11.3/jquery.min.js\"></script>\r\n");
      out.write("    <!--<script type=\"text/javascript\" src=\"js/jquery-1.7.2.js\"></script>-->\r\n");
      out.write("    <!-- 最新的 Bootstrap 核心 JavaScript 文件 -->\r\n");
      out.write("    <script src=\"//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <title>webSocket测试</title>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        $(function(){\r\n");
      out.write("            var websocket;\r\n");
      out.write("            if ('WebSocket' in window) {\r\n");
      out.write("                alert(\"WebSocket\");\r\n");
      out.write("                websocket = new WebSocket(\"ws://localhost:8080/echo\");\r\n");
      out.write("            } else if ('MozWebSocket' in window) {\r\n");
      out.write("                alert(\"MozWebSocket\");\r\n");
      out.write("                websocket = new MozWebSocket(\"ws://localhost:8080/echo\");\r\n");
      out.write("            } else {\r\n");
      out.write("                alert(\"SockJS\");\r\n");
      out.write("                websocket = new SockJS(\"http://localhost:8080/sockjs/echo\");\r\n");
      out.write("            }\r\n");
      out.write("            websocket.onopen = function (evnt) {\r\n");
      out.write("                alert(\"123\");\r\n");
      out.write("                $(\"#tou\").html(\"链接服务器成功!\")\r\n");
      out.write("            };\r\n");
      out.write("            websocket.onmessage = function (evnt) {\r\n");
      out.write("            \talert(\"123\");\r\n");
      out.write("                $(\"#msg\").html($(\"#msg\").html() + \"<br/>\" + evnt.data);\r\n");
      out.write("            };\r\n");
      out.write("            websocket.onerror = function (evnt) {\r\n");
      out.write("            };\r\n");
      out.write("            websocket.onclose = function (evnt) {\r\n");
      out.write("                $(\"#tou\").html(\"与服务器断开了链接!\")\r\n");
      out.write("            }\r\n");
      out.write("            $('#send').bind('click', function() {\r\n");
      out.write("                send();\r\n");
      out.write("            });\r\n");
      out.write("            function send(){\r\n");
      out.write("                if (websocket != null) {\r\n");
      out.write("                    var message = document.getElementById('message').value;\r\n");
      out.write("                    websocket.send(message);\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert('未与服务器链接.');\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"page-header\" id=\"tou\">\r\n");
      out.write("    webSocket及时聊天Demo程序\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"well\" id=\"msg\">\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"col-lg\">\r\n");
      out.write("    <div class=\"input-group\">\r\n");
      out.write("        <input type=\"text\" class=\"form-control\" placeholder=\"发送信息...\" id=\"message\">\r\n");
      out.write("      <span class=\"input-group-btn\">\r\n");
      out.write("        <button class=\"btn btn-default\" type=\"button\" id=\"send\" >发送</button>\r\n");
      out.write("      </span>\r\n");
      out.write("    </div><!-- /input-group -->\r\n");
      out.write("</div><!-- /.col-lg-6 -->\r\n");
      out.write("</div><!-- /.row -->\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
